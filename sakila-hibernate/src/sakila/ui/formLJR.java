/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sakila.ui;



import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;
import sakila.entity.Actor;
import sakila.util.HibernateUtil;

/**
 *
 * @author Librada Justicia Ruiz
 */
public class formLJR extends javax.swing.JFrame {

    
    //Sentencia
    private static String consultaActores = "FROM Actor actor ORDER BY actor.lastName";
    
    /**
     * Creates new form formLJR
     */
    public formLJR() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableMuestra = new javax.swing.JTable();
        buttonActores = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableMuestra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableMuestra);

        buttonActores.setText("Lista de actores");
        buttonActores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(buttonActores, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(buttonActores)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Evento que llama a la ejecución de la consulta HQL
     * 
     * @param evt 
     */
    private void buttonActoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActoresActionPerformed
        // TODO add your handling code here:
        ejecutaHQLconsulta(consultaActores);
    }//GEN-LAST:event_buttonActoresActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formLJR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formLJR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formLJR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formLJR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formLJR().setVisible(true);
            }
        });
    }
    
    /**Método que ejecuta una sentencia HQL
     * 
     * @param hql 
     */
    private void ejecutaHQLconsulta (String hql){
        Session session = HibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
        try{
            tx = session.beginTransaction();
            Query qconsulta = session.createQuery(hql);
            List<Actor> resultList = qconsulta.list();
            mostrarResultados(resultList);
            session.getTransaction().commit();
            session.close();
        }catch(HibernateException hex){
            if (tx != null){
                tx.rollback();
            }
            Logger.getLogger(formLJR.class.getName()).log(Level.SEVERE, null, hex);
        }
    }
    
    /** Método que muestra un resultado List en un jTable
     * 
     * @param list 
     */
    private void mostrarResultados (List list){
        //DefaultTableModel model = new DefaultTableModel(new String[]{"Nombre", "Apellido"}, 0);
        Vector<String> tableHeaders = new Vector<>();
        Vector tableData = new Vector();
        tableHeaders.add("Nombre");
        tableHeaders.add("Apellido");
        Iterator<Actor> listIterator = list.iterator();
        for (Object o : list){
            Actor actor = (Actor) o;
            Vector <Object> oneRow = new Vector<>();
            oneRow.add(actor.getFirstName());
            oneRow.add(actor.getLastName());
            tableData.add(oneRow);
        }
        tableMuestra.setModel(new DefaultTableModel(tableData, tableHeaders));
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonActores;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableMuestra;
    // End of variables declaration//GEN-END:variables
}
